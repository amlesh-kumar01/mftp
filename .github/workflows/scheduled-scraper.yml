name: Scheduled MFTP Scraper

on:
  schedule:
    - cron: '*/10 * * * *'  # Every 10 minutes
  workflow_dispatch:  # Allow manual trigger

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create config directories
        run: |
          mkdir -p mftp_config
          mkdir -p doctor_config

      - name: Create MFTP config files from secrets
        run: |
          printf "%s" "${{ secrets.ENV_PY }}" > mftp_config/env.py
          printf "%s" "${{ secrets.TOKEN_JSON }}" > mftp_config/token.json
          printf "%s" "${{ secrets.CREDENTIALS_JSON }}" > mftp_config/credentials.json
          printf "%s" "${{ secrets.MAIL_SEND_TOKEN_JSON }}" > mftp_config/mail_send_token.json
          printf "%s" "${{ secrets.MAIL_SEND_CREDS_JSON }}" > mftp_config/mail_send_creds.json
          printf "%s" "${{ secrets.COMPANIES_JSON }}" > mftp_config/companies.json

      - name: Create session file from secrets
        run: |
          if [ ! -z "${{ secrets.SESSION_FILE }}" ]; then
            printf "%s" "${{ secrets.SESSION_FILE }}" > mftp_config/.session
          else
            touch mftp_config/.session
          fi

      - name: Create Doctor config files from secrets
        run: |
          printf "%s" "${{ secrets.ENV_PY }}" > doctor_config/env.py

      - name: Create .env file
        run: |
          cat > .env << EOF
          MFTP_CONFIG=./mftp_config
          MFTP_MODE=--smtp --cron
          DOCTOR_CONFIG=./doctor_config
          DOCTOR_MODE=
          MONGO_ROOT_USERNAME=mftp
          MONGO_ROOT_PASSWORD=ptfm
          MONGO_DATABASE=mftp
          MONGO_PORT=27017
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start MongoDB first
        run: |
          docker compose up -d db
          sleep 30

      - name: Check MongoDB health
        run: |
          docker compose ps
          docker compose logs db

      - name: Run MFTP scraper (one-time execution)
        run: |
          docker compose run --rm mftp

      - name: Show logs for debugging
        if: failure()
        run: |
          docker compose logs
          
      - name: Cleanup
        if: always()
        run: |
          docker compose down -v
